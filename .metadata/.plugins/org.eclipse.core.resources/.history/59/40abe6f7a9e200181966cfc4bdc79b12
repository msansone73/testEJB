package br.msansone.testEJB.data;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;

import br.msansone.testEJB.Model.Mensagem;

public class DataAccess {
	
    private static final String PERSISTENCE_UNIT_NAME = "test";
    private static EntityManagerFactory factory;
    
	public static void gravarMensagem(String mensagem)
	{
		factory = Persistence.createEntityManagerFactory(PERSISTENCE_UNIT_NAME);
        EntityManager em = factory.createEntityManager();

        // create new todo
        em.getTransaction().begin();
        
        Mensagem mensagem1 = new Mensagem();
        mensagem1.setConteudo(mensagem);
        em.persist(mensagem1);
        em.getTransaction().commit();
        
      // read the existing entries and write to console
      Query q = em.createQuery("select t from Mensagem t");
      List<Mensagem> todoList = q.getResultList();
      for (Mensagem todo : todoList) {
          System.out.println(todo);
      }
      System.out.println("Size: " + todoList.size());
        
        em.close();

	}

	
	public static String lerMensagem(Long id)
	{
		String saida="";
		
		factory = Persistence.createEntityManagerFactory(PERSISTENCE_UNIT_NAME);
        EntityManager em = factory.createEntityManager();

      // read the existing entries and write to console
      Query q = em.createQuery("select t from Mensagem t where t.id=:id")
    		  .setParameter("id", id);
      List<Mensagem> todoList = q.getResultList();
      
      if (todoList.size()==0){
    	  return saida;
    	  }
      
      for (Mensagem todo : todoList) {
    	  saida=todo.getConteudo();
          System.out.println(todo);
      }
        
        em.close();

        return saida;
	}

	public static List<Mensagem> lerTodasMensagens()
	{
		factory = Persistence.createEntityManagerFactory(PERSISTENCE_UNIT_NAME);
        EntityManager em = factory.createEntityManager();

      // read the existing entries and write to console
      Query q = em.createQuery("select t from Mensagem t ");

      List<Mensagem> mensagens = q.getResultList(); 
      em.close();
   
      return  mensagens;
   }

}
